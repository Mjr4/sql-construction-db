---------------TB_OCUPACION
--INSERCCION
ALTER TRIGGER TR_LOG_INSERCION_TB_OCUP
ON TB_OCUPACIONES AFTER INSERT
	AS BEGIN
		BEGIN TRAN
			SET NOCOUNT ON
			DECLARE @ID_OCUP VARCHAR(10)
			SELECT @ID_OCUP = ID_Ocupacion FROM inserted TB_OCUPACION
			INSERT INTO TB_Log (Accion, Tabla) VALUES ('Insercion de la ocupacion ID: '+@ID_OCUP, 'TB_OCUPACION')
		COMMIT TRAN
END
GO

--ACTUALIZACION
ALTER TRIGGER TR_LOG_ACTUALIZACION_TB_OCUP
ON TB_OCUPACIONES AFTER UPDATE
	AS BEGIN
		BEGIN TRAN
			SET NOCOUNT ON
			DECLARE @ID_OCUP VARCHAR(30)
			SELECT @ID_OCUP = ID_Ocupacion FROM inserted TB_OCUPACION
			INSERT INTO TB_Log (Accion, Tabla) VALUES ('Actualizacion de la ocupacion ID: '+@ID_OCUP, 'TB_OCUPACION')
		COMMIT TRAN
END
GO

--Eliminacion
ALTER TRIGGER TR_LOG_Eliminacion_TB_OCUP
ON TB_OCUPACIONES AFTER DELETE
	AS BEGIN
		BEGIN TRAN
			SET NOCOUNT ON
			INSERT INTO TB_Log (Accion, Tabla) VALUES ('Eliminacion de una ocupacion', 'TB_OCUPACION')
		COMMIT TRAN
END
GO

-------------TB_contrato
--Inserccion
ALTER TRIGGER TR_LOG_INSERCION_TB_CONTR
ON TB_CONTRATO AFTER INSERT
	AS BEGIN
		BEGIN TRAN
			SET NOCOUNT ON
			DECLARE @ID_CONT VARCHAR(20)
			SELECT @ID_CONT = ID_CONTRATO FROM inserted TB_CONTRATO
			INSERT INTO TB_Log (Accion, Tabla) VALUES ('Insercion del contrato ID: '+@ID_CONT, 'TB_CONTRATO')
		COMMIT TRAN
END

--ACTUALIZACION
ALTER TRIGGER TR_LOG_ACTUALIZACION_TB_CONTR
ON TB_CONTRATO AFTER UPDATE
	AS BEGIN
		BEGIN TRAN
			SET NOCOUNT ON
			DECLARE @ID_CONT VARCHAR(20)
			SELECT @ID_CONT = ID_CONTRATO FROM inserted TB_CONTRATO
			INSERT INTO TB_Log (Accion, Tabla) VALUES ('Actualizacion del contrato ID: '+@ID_CONT, 'TB_CONTRATO')
		COMMIT TRAN
END

--ELIMINACION
CREATE TRIGGER TR_LOG_ELIMINACION_TB_CONTR
ON TB_CONTRATO AFTER DELETE
	AS BEGIN
		BEGIN TRAN
			SET NOCOUNT ON
			INSERT INTO TB_Log (Accion, Tabla) VALUES ('Eliminacion de un contrato', 'TB_CONTRATO')
		COMMIT TRAN
END

------------TB_PAGOS
--INSERCCION
ALTER TRIGGER TR_LOG_INSERCION_TB_PAGOS
ON TB_PAGOS AFTER INSERT
	AS BEGIN
		BEGIN TRAN
			SET NOCOUNT ON
			DECLARE @ID_PAG VARCHAR(20)
			SELECT @ID_PAG = ID_PAGO FROM inserted TB_PAGOS
			INSERT INTO TB_Log (Accion, Tabla) VALUES ('Insercion del pago '+@ID_PAG, 'TB_PAGOS')
		COMMIT TRAN
END

--ACTUALIZACION
ALTER TRIGGER TR_LOG_ACTUALIZACION_TB_PAGOS
ON TB_PAGOS AFTER UPDATE
	AS BEGIN
		BEGIN TRAN
			SET NOCOUNT ON
			DECLARE @ID_PAG VARCHAR(20)
			SELECT @ID_PAG = ID_PAGO FROM inserted TB_PAGOS
			INSERT INTO TB_Log (Accion, Tabla) VALUES ('Actualizacion de pago '+@ID_PAG, 'TB_PAGOS')
		COMMIT TRAN
END

--ELIMINACION
CREATE TRIGGER TR_LOG_ELIMINACION_TB_PAGOS
ON TB_PAGOS AFTER DELETE
	AS BEGIN
		BEGIN TRAN
			SET NOCOUNT ON
			INSERT INTO TB_Log (Accion, Tabla) VALUES ('Eliminacion de un pago', 'TB_PAGOS')
		COMMIT TRAN
END

-----------------TB_TABAJADORES
--INSERCCION
ALTER TRIGGER TR_LOG_INSERCION_TB_TRABAJADORES
ON TB_TRABAJADORES AFTER INSERT
	AS BEGIN
		BEGIN TRAN
			SET NOCOUNT ON
			DECLARE @ID_TRABAJ VARCHAR(20)
			SELECT @ID_TRABAJ = ID_Trabajador FROM inserted TB_TRABAJADORES
			INSERT INTO TB_Log (Accion, Tabla) VALUES ('Insercion del Trabajador ID: '+@ID_TRABAJ, 'TB_TRABAJADORES')
		COMMIT TRAN
END

--ACTUALIZACION
ALTER TRIGGER TR_LOG_ACTUALIZACION_TB_TRABAJADORES
ON TB_TRABAJADORES AFTER UPDATE
	AS BEGIN
		BEGIN TRAN
			SET NOCOUNT ON
			DECLARE @ID_TRABAJ VARCHAR(20)
			SELECT @ID_TRABAJ = ID_Trabajador FROM inserted TB_TRABAJADORES
			INSERT INTO TB_Log (Accion, Tabla) VALUES ('Actualizacion del Trabajador ID: '+@ID_TRABAJ, 'TB_TRABAJADORES')
		COMMIT TRAN
END

--ELIMINACION
CREATE TRIGGER TR_LOG_ELIMINACION_TB_TRABAJADORES
ON TB_TRABAJADORES AFTER DELETE
	AS BEGIN
		BEGIN TRAN
			SET NOCOUNT ON
			INSERT INTO TB_Log (Accion, Tabla) VALUES ('Eliminacion del registro de un Trabajador', 'TB_TRABAJADORES')
		COMMIT TRAN
END

-----------------------TB_PROYECTOS
--Inserccion
ALTER TRIGGER TR_LOG_INSERCION_TB_PROYECTOS
ON TB_PROYECTOS AFTER INSERT
	AS BEGIN
		BEGIN TRAN
			SET NOCOUNT ON
			DECLARE @ID_PROY VARCHAR(20)
			SELECT @ID_PROY = ID_PROYECTO FROM inserted TB_PROYECTOS
			INSERT INTO TB_Log (Accion, Tabla) VALUES ('Insercion del proyecto ID: '+@ID_PROY, 'TB_PROYECTOS')
		COMMIT TRAN
END

--Actualizacion
CREATE TRIGGER TR_LOG_ACTUALIZACION_TB_PROYECTOS
ON TB_PROYECTOS AFTER UPDATE
	AS BEGIN
		BEGIN TRAN
			SET NOCOUNT ON
			DECLARE @ID_PROY VARCHAR(10)
			SELECT @ID_PROY = ID_PROYECTO FROM inserted TB_PROYECTOS
			INSERT INTO TB_Log (Accion, Tabla) VALUES ('Actualizacion del proyecto ID: '+@ID_PROY, 'TB_PROYECTOS')
		COMMIT TRAN
END

--Eliminacion
CREATE TRIGGER TR_LOG_ELIMINACION_TB_PROYECTOS
ON TB_PROYECTOS AFTER DELETE
	AS BEGIN
		BEGIN TRAN
			SET NOCOUNT ON
			INSERT INTO TB_Log (Accion, Tabla) VALUES ('Eliminacion de un proyecto', 'TB_PROYECTOS')
		COMMIT TRAN
END

-------------------TB_ACTIVIDADES
CREATE TRIGGER TR_LOG_INSERCION_TB_ACTIVIDADES
ON TB_ACTIVIDADES AFTER INSERT
	AS BEGIN
		BEGIN TRAN
			SET NOCOUNT ON
			DECLARE @ID_ACT VARCHAR(10)
			SELECT @ID_ACT = ID_ACTIVIDAD FROM inserted TB_ACTIVIDADES
			INSERT INTO TB_Log (Accion, Tabla) VALUES ('Insercion de actividad ID: '+@ID_ACT, 'TB_ACTIVIDADES')
		COMMIT TRAN
END

--ACTUALIZACION
CREATE TRIGGER TR_LOG_ACTUALIZACION_TB_ACTIVIDADES
ON TB_ACTIVIDADES AFTER UPDATE
	AS BEGIN
		BEGIN TRAN
			SET NOCOUNT ON
			DECLARE @ID_ACT VARCHAR(10)
			SELECT @ID_ACT = ID_ACTIVIDAD FROM inserted TB_ACTIVIDADES
			INSERT INTO TB_Log (Accion, Tabla) VALUES ('Actualizacion de actividad ID: '+@ID_ACT, 'TB_ACTIVIDADES')
		COMMIT TRAN
END

--Eliminacion
CREATE TRIGGER TR_LOG_INSERCION_TB_ELIMINACION
ON TB_ACTIVIDADES AFTER DELETE
	AS BEGIN
		BEGIN TRAN
			SET NOCOUNT ON
			INSERT INTO TB_Log (Accion, Tabla) VALUES ('Eliminacion de actividad', 'TB_ACTIVIDADES')
		COMMIT TRAN
END

		


